import React, { useEffect, useRef } from 'react';

const AudioPlayer = ({ audioBase64, onEnded, autoPlay = true }) => {
  const audioRef = useRef(null);
  const hasPlayedRef = useRef(false);
  const currentAudioId = useRef(null);

  useEffect(() => {
    if (audioBase64 && audioRef.current && !hasPlayedRef.current) {
      console.log('üéµ AudioPlayer: –ø–æ–ª—É—á–µ–Ω base64 —Ä–∞–∑–º–µ—Ä–æ–º', audioBase64.length, '—Å–∏–º–≤–æ–ª–æ–≤');
      
      // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è —ç—Ç–æ–≥–æ –∞—É–¥–∏–æ
      const audioId = `audio_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;
      currentAudioId.current = audioId;
      
      // –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ data URL –∏–∑ base64
      const audioUrl = `data:audio/mp3;base64,${audioBase64}`;
      audioRef.current.src = audioUrl;

      if (autoPlay) {
        hasPlayedRef.current = true; // –ü–æ–º–µ—á–∞–µ–º —á—Ç–æ —É–∂–µ –∏–≥—Ä–∞–µ–º
        
        // –£–í–ï–î–û–ú–õ–Ø–ï–ú —á—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
        setTimeout(() => {
          localStorage.setItem('announcementStatus', JSON.stringify({
            isPlaying: true,
            timestamp: Date.now(),
            audioId: audioId
          }));
          console.log('üì¢ –£–≤–µ–¥–æ–º–∏–ª–∏ —á—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å, ID:', audioId);
        }, 100);
        
        // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∞—É–¥–∏–æ
        audioRef.current.play().then(() => {
          console.log('‚úÖ –ê—É–¥–∏–æ –Ω–∞—á–∞–ª–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è, ID:', audioId);
        }).catch(error => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∞—É–¥–∏–æ:', error);
          hasPlayedRef.current = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø—Ä–∏ –æ—à–∏–±–∫–µ
          
          // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å
          setTimeout(() => {
            localStorage.setItem('announcementStatus', JSON.stringify({
              isPlaying: false,
              timestamp: Date.now(),
              audioId: audioId
            }));
          }, 100);
        });
      }
    }

    // –°–±—Ä–æ—Å —Ñ–ª–∞–≥–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –∞—É–¥–∏–æ
    return () => {
      hasPlayedRef.current = false;
      // –£–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∞—É–¥–∏–æ)
      if (currentAudioId.current) {
        setTimeout(() => {
          localStorage.setItem('announcementStatus', JSON.stringify({
            isPlaying: false,
            timestamp: Date.now(),
            audioId: currentAudioId.current
          }));
        }, 100);
      }
    };
  }, [audioBase64, autoPlay]);

  const handleEnded = () => {
    console.log('üèÅ –ê—É–¥–∏–æ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å, ID:', currentAudioId.current);
    hasPlayedRef.current = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å
    
    // –£–í–ï–î–û–ú–õ–Ø–ï–ú —á—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å
    setTimeout(() => {
      localStorage.setItem('announcementStatus', JSON.stringify({
        isPlaying: false,
        timestamp: Date.now(),
        audioId: currentAudioId.current
      }));
      console.log('üì¢ –£–≤–µ–¥–æ–º–∏–ª–∏ —á—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å, ID:', currentAudioId.current);
    }, 100);
    
    if (onEnded) {
      onEnded();
    }
  };

  if (!audioBase64) {
    return null;
  }

  return (
    <audio
      ref={audioRef}
      controls={false}
      onEnded={handleEnded}
      preload="auto"
      style={{ display: 'none' }}
    />
  );
};

export default AudioPlayer;